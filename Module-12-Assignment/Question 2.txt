Question : Optimize the following code and quote the problems associated with current code.
trigger accountTrigger on Account (before delete, before insert, before update) 
{
    List<Opportunity> opptysClosedLost = [select id, name, closedate, stagename from Opportunity
                                          where accountId IN :Trigger.newMap.keySet() and StageName='Closed - Lost'];
    List<Opportunity> opptysClosedWon = [select id, name, closedate, stagename from Opportunity where
                                         accountId IN :Trigger.newMap.keySet() and StageName='Closed - Won'];
    for(Account a : Trigger.new)
    {
        for(Opportunity o: opptysClosedLost)
        {
            if(o.accountid == a.id)
                System.debug('Do more logic here...');
        }
        for(Opportunity o: opptysClosedWon)
        {
            if(o.accountid == a.id)
                System.debug('Do more logic here...');
        }
    }
}

Answer:
trigger accountTrigger on Account (before delete, before insert, before update) 
{
    List<Account> accountList = new List<Account>();
    if(Trigger.isInsert)
	{
        
    }
    else if(Trigger.isDelete) 
	{
        accountList = [SELECT Id, (SELECT Id, Name, Closedate, StageName FROM Opportunities WHERE StageName = 'Closed Lost' OR stageName = 'Closed Won') FROM Account WHERE Id IN : Trigger.old];
    }
    else
	{
        accountList = [SELECT Id, (SELECT Id, Name, Closedate, StageName FROM Opportunities WHERE StageName = 'Closed Lost' OR stageName = 'Closed Won') FROM Account WHERE Id IN : Trigger.new];
    }
    for(Account a : AccountList)
	{
        for(Opportunity o: a.Opportunities)
		{
            if(o.stageName == 'Closed Won')
                System.debug('Do more logic here...');
            if(o.stageName == 'Closed Lost')
                System.dubug('Do more logic here...');
        }
    }   
}

Problems:
1. Two separate queries were being executing in order to get different records. Created one query to fetch Account with their Opportunities that are closed won/closed lost.
2. When trigger is executed on delete using Trigger.new won't be available. So, instead used instance variable to handle triiger logic when called on deletion.
3. Rather than iterating through all the Opportunities and then checking if the opportunity is related to current account,
   we could simply use the sub query to get the list of Opportunities that are related to the particular account.
4. Finally the opportunities can be further processed by if conditions to identify closed won/closed lost.
5. If the trigger is Insert then we will do nothing as there won't be any Id of the records moreover there won't be any opportunity related to it at that time.